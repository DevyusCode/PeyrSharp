import{_ as s,c as a,o as n,a as e}from"./app.d2e174c0.js";const u=JSON.parse('{"title":"StringExtensions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Compatibility","slug":"compatibility","link":"#compatibility","children":[]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"CountWords()","slug":"countwords","link":"#countwords","children":[]},{"level":3,"title":"CountWords(wordSeparator)","slug":"countwords-wordseparator","link":"#countwords-wordseparator","children":[]},{"level":3,"title":"EndsWithSamePunctuation(stringToCheck)","slug":"endswithsamepunctuation-stringtocheck","link":"#endswithsamepunctuation-stringtocheck","children":[]},{"level":3,"title":"EndsWithSamePunctuation(stringToCheck, punctuationToCheck)","slug":"endswithsamepunctuation-stringtocheck-punctuationtocheck","link":"#endswithsamepunctuation-stringtocheck-punctuationtocheck","children":[]},{"level":3,"title":"EncryptAes(key)","slug":"encryptaes-key","link":"#encryptaes-key","children":[]},{"level":3,"title":"DecryptAes(key)","slug":"decryptaes-key","link":"#decryptaes-key","children":[]},{"level":3,"title":"HasRepeatedCharacters()","slug":"hasrepeatedcharacters","link":"#hasrepeatedcharacters","children":[]},{"level":3,"title":"SplitLines()","slug":"splitlines","link":"#splitlines","children":[]}]}],"relativePath":"extensions/string.md","lastUpdated":1667467392000}'),t={name:"extensions/string.md"},o=e(`<h1 id="stringextensions" tabindex="-1">StringExtensions <a class="header-anchor" href="#stringextensions" aria-hidden="true">#</a></h1><p>This page is about the <code>StringExtensions</code> class available in <a href="/extensions.html"><code>PeyrSharp.Extensions</code></a>. You can find here all of its extension methods.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This class is <code>static</code>.</p></div><h2 id="compatibility" tabindex="-1">Compatibility <a class="header-anchor" href="#compatibility" aria-hidden="true">#</a></h2><p>The <code>StringExtensions</code> class is part of the <code>PeyrSharp.Extensions</code> module, and is compatible with all of these frameworks and platforms:</p><table><thead><tr><th>Package/Platform</th><th>Windows</th><th>macOS</th><th>Linux + others</th></tr></thead><tbody><tr><td>Core</td><td>\u2705</td><td>\u2705</td><td>\u2705</td></tr><tr><td><strong>Framework</strong></td><td><strong>.NET 5</strong></td><td><strong>.NET 6</strong></td><td><strong>.NET 7</strong></td></tr><tr><td>Core</td><td>\u2705</td><td>\u2705</td><td>\u2705</td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="countwords" tabindex="-1">CountWords() <a class="header-anchor" href="#countwords" aria-hidden="true">#</a></h3><h4 id="definition" tabindex="-1">Definition <a class="header-anchor" href="#definition" aria-hidden="true">#</a></h4><p>Counts the number of words in a <code>string</code>. Returns <code>int</code>.</p><h4 id="arguments" tabindex="-1">Arguments <a class="header-anchor" href="#arguments" aria-hidden="true">#</a></h4><p>This method has no arguments.</p><h4 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> PeyrSharp.Extensions</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">numberOfWords</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, this is a test sentence!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CountWords</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;">// numberOfWords = 6</span></span>
<span class="line"></span></code></pre></div><h3 id="countwords-wordseparator" tabindex="-1">CountWords(wordSeparator) <a class="header-anchor" href="#countwords-wordseparator" aria-hidden="true">#</a></h3><h4 id="definition-1" tabindex="-1">Definition <a class="header-anchor" href="#definition-1" aria-hidden="true">#</a></h4><p>Counts the number of words in a <code>string</code>, with specified word separators. By default, the method uses those (if you don&#39;t pass any argument to it): <code></code>, <code>,</code>, <code>;</code>, <code>.</code>, <code>:</code>, <code>!</code>, <code>?</code>. Returns <code>int</code>.</p><h4 id="arguments-1" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-1" aria-hidden="true">#</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string[]</code></td><td><code>wordSeparator</code></td><td>The separator of the words.</td></tr></tbody></table><h4 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> PeyrSharp.Extensions</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">string[]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">wordSeparator</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">numberOfWords</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, this is a test sentence!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CountWords</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">wordSeparator</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">// numberOfWords = 6</span></span>
<span class="line"></span></code></pre></div><h3 id="endswithsamepunctuation-stringtocheck" tabindex="-1">EndsWithSamePunctuation(stringToCheck) <a class="header-anchor" href="#endswithsamepunctuation-stringtocheck" aria-hidden="true">#</a></h3><h4 id="definition-2" tabindex="-1">Definition <a class="header-anchor" href="#definition-2" aria-hidden="true">#</a></h4><p>Checks if a <code>string</code> is ending with the same punctuation than an other one. Returns a <code>bool</code>; <code>true</code> if it is the case.</p><h4 id="arguments-2" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-2" aria-hidden="true">#</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>stringToCheck</code></td><td>The string to compare.</td></tr></tbody></table><h4 id="usage-2" tabindex="-1">Usage <a class="header-anchor" href="#usage-2" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> PeyrSharp.Extensions</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This is a test sentence.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This is an another test sentence.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">EndsWithSamePunctuation</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// true</span></span>
<span class="line"></span></code></pre></div><h3 id="endswithsamepunctuation-stringtocheck-punctuationtocheck" tabindex="-1">EndsWithSamePunctuation(stringToCheck, punctuationToCheck) <a class="header-anchor" href="#endswithsamepunctuation-stringtocheck-punctuationtocheck" aria-hidden="true">#</a></h3><h4 id="definition-3" tabindex="-1">Definition <a class="header-anchor" href="#definition-3" aria-hidden="true">#</a></h4><p>Checks if a <code>string</code> is ending with the same <strong>specified</strong> punctuation than an other one. Returns a <code>bool</code>; <code>true</code> if it is the case.</p><h4 id="arguments-3" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-3" aria-hidden="true">#</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>stringToCheck</code></td><td>The string to compare.</td></tr><tr><td><code>string</code></td><td><code>punctuationToCheck</code></td><td>The punctuation sign to check for.</td></tr></tbody></table><h4 id="usage-3" tabindex="-1">Usage <a class="header-anchor" href="#usage-3" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> PeyrSharp.Extensions</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This is a test sentence.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This is an another test sentence.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">EndsWithSamePunctuation</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// true</span></span>
<span class="line"></span></code></pre></div><h3 id="encryptaes-key" tabindex="-1">EncryptAes(key) <a class="header-anchor" href="#encryptaes-key" aria-hidden="true">#</a></h3><h4 id="definitions" tabindex="-1">Definitions <a class="header-anchor" href="#definitions" aria-hidden="true">#</a></h4><p>Encrypts a <code>string</code> using AES encryption. Returns the encrypted content as a <code>string</code> as well.</p><h4 id="arguments-4" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-4" aria-hidden="true">#</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>key</code></td><td>The encryption key. This is the same key that will be used to decrypt the text.</td></tr></tbody></table><h4 id="usage-4" tabindex="-1">Usage <a class="header-anchor" href="#usage-4" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> PeyrSharp.Core</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">encrypted</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">EncryptAes</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">// encrypted = 6NvvTBntd2PdFxXzVbccLw==</span></span>
<span class="line"></span></code></pre></div><h3 id="decryptaes-key" tabindex="-1">DecryptAes(key) <a class="header-anchor" href="#decryptaes-key" aria-hidden="true">#</a></h3><h4 id="definitions-1" tabindex="-1">Definitions <a class="header-anchor" href="#definitions-1" aria-hidden="true">#</a></h4><p>Decrypts a <code>string</code> using AES encryption. Returns the decrypted content as a <code>string</code> as well.</p><h4 id="arguments-5" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-5" aria-hidden="true">#</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>key</code></td><td>The encryption key that was used during the encryption process.</td></tr></tbody></table><h4 id="usage-5" tabindex="-1">Usage <a class="header-anchor" href="#usage-5" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> PeyrSharp.Core</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">text</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">6NvvTBntd2PdFxXzVbccLw==</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">DecryptAes</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">// text = Hello!</span></span>
<span class="line"></span></code></pre></div><h3 id="hasrepeatedcharacters" tabindex="-1">HasRepeatedCharacters() <a class="header-anchor" href="#hasrepeatedcharacters" aria-hidden="true">#</a></h3><h4 id="definition-4" tabindex="-1">Definition <a class="header-anchor" href="#definition-4" aria-hidden="true">#</a></h4><p>Checks if a letter or character is being repeated in a <code>string</code>. Returns <code>bool</code>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Only returns <code>true</code> if a character is repeated more than three times. For instance, &quot;11&quot; will return <code>false</code>, whereas &quot;aaaa&quot; will return <code>true</code>.</p></div><h4 id="arguments-6" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-6" aria-hidden="true">#</a></h4><p>This methods has no arguments.</p><h4 id="usage-6" tabindex="-1">Usage <a class="header-anchor" href="#usage-6" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> PeyrSharp.Extensions</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">111</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">HasRepeatedCharacters</span><span style="color:#89DDFF;">();</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// true</span></span>
<span class="line"></span></code></pre></div><h3 id="splitlines" tabindex="-1">SplitLines() <a class="header-anchor" href="#splitlines" aria-hidden="true">#</a></h3><h4 id="definition-5" tabindex="-1">Definition <a class="header-anchor" href="#definition-5" aria-hidden="true">#</a></h4><p>Splits a <code>string</code> lines to an array. Returns <code>string[]</code>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The method uses the <code>string.Split()</code> method under the hood, which means that it is providing it the following separators: <code>\\n</code>, <code>\\r</code>, <code>\\r\\n</code>.</p></div><h4 id="arguments-7" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-7" aria-hidden="true">#</a></h4><p>This methods has no arguments.</p><h4 id="usage-7" tabindex="-1">Usage <a class="header-anchor" href="#usage-7" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> PeyrSharp.Extensions</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">string[]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">lines</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SplitLines</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;">// lines = { &quot;Hello&quot;, &quot;World&quot; }</span></span>
<span class="line"></span></code></pre></div>`,65),l=[o];function r(p,c,i,d,h,y){return n(),a("div",null,l)}const F=s(t,[["render",r]]);export{u as __pageData,F as default};
