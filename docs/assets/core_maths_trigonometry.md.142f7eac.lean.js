import{_ as e,c as a,o as s,a as t}from"./app.0c9be26e.js";const u=JSON.parse('{"title":"Trigonometry","description":"","frontmatter":{},"headers":[{"level":2,"title":"Compatibility","slug":"compatibility","link":"#compatibility","children":[]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"GetOpposedSideFrom(triangleSide, angle, value)","slug":"getopposedsidefrom-triangleside-angle-value","link":"#getopposedsidefrom-triangleside-angle-value","children":[]},{"level":3,"title":"GetAdjacentSideFrom(triangleSide, angle, value)","slug":"getadjacentsidefrom-triangleside-angle-value","link":"#getadjacentsidefrom-triangleside-angle-value","children":[]},{"level":3,"title":"GetHypotenuseFrom(triangleSide, angle, value)","slug":"gethypotenusefrom-triangleside-angle-value","link":"#gethypotenusefrom-triangleside-angle-value","children":[]}]}],"relativePath":"core/maths/trigonometry.md","lastUpdated":1666370076000}'),n={name:"core/maths/trigonometry.md"},o=t("",31),l=[o];function d(r,i,p,c,h,g){return s(),a("div",null,l)}const C=e(n,[["render",d]]);export{u as __pageData,C as default};
