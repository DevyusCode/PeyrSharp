import{_ as s,c as a,o as e,a as n}from"./app.28de27a0.js";const F=JSON.parse('{"title":"Enumerations","description":"","frontmatter":{},"headers":[{"level":2,"title":"Compatibility","slug":"compatibility","link":"#compatibility","children":[]},{"level":2,"title":"Converters","slug":"converters","link":"#converters","children":[{"level":3,"title":"StorageUnits","slug":"storageunits","link":"#storageunits","children":[]},{"level":3,"title":"TimeUnits","slug":"timeunits","link":"#timeunits","children":[]}]},{"level":2,"title":"Environment","slug":"environment","link":"#environment","children":[{"level":3,"title":"OperatingSystems","slug":"operatingsystems","link":"#operatingsystems","children":[]},{"level":3,"title":"SystemThemes","slug":"systemthemes","link":"#systemthemes","children":[]},{"level":3,"title":"WindowsVersion","slug":"windowsversion","link":"#windowsversion","children":[]}]},{"level":2,"title":"Geometry","slug":"geometry","link":"#geometry","children":[{"level":3,"title":"TriangleSides","slug":"trianglesides","link":"#trianglesides","children":[]}]},{"level":2,"title":"Internet","slug":"internet","link":"#internet","children":[{"level":3,"title":"StatusCodes","slug":"statuscodes","link":"#statuscodes","children":[]}]},{"level":2,"title":"Password","slug":"password","link":"#password","children":[{"level":3,"title":"PasswordPresets","slug":"passwordpresets","link":"#passwordpresets","children":[]},{"level":3,"title":"PasswordStrength","slug":"passwordstrength","link":"#passwordstrength","children":[]}]},{"level":2,"title":"UserInterface","slug":"userinterface","link":"#userinterface","children":[{"level":3,"title":"ControlAlignment","slug":"controlalignment","link":"#controlalignment","children":[]}]}],"relativePath":"enumerations.md","lastUpdated":1665311928000}'),t={name:"enumerations.md"},o=n(`<h1 id="enumerations" tabindex="-1">Enumerations <a class="header-anchor" href="#enumerations" aria-hidden="true">#</a></h1><p>This page is about the enumerations available in PeyrSharp.Enums. They are grouped by category.</p><h2 id="compatibility" tabindex="-1">Compatibility <a class="header-anchor" href="#compatibility" aria-hidden="true">#</a></h2><p>Enumerations are part of the <code>PeyrSharp.Enums</code> module, which is compatible with all of these frameworks and platforms:</p><table><thead><tr><th>Package/Platform</th><th>Windows</th><th>macOS</th><th>Linux + others</th></tr></thead><tbody><tr><td>Enums</td><td>\u2705</td><td>\u2705</td><td>\u2705</td></tr><tr><td><strong>Framework</strong></td><td><strong>.NET 5</strong></td><td><strong>.NET 6</strong></td><td><strong>.NET 7</strong></td></tr><tr><td>Enums</td><td>\u2705</td><td>\u2705</td><td>\u2705</td></tr></tbody></table><h2 id="converters" tabindex="-1">Converters <a class="header-anchor" href="#converters" aria-hidden="true">#</a></h2><h3 id="storageunits" tabindex="-1">StorageUnits <a class="header-anchor" href="#storageunits" aria-hidden="true">#</a></h3><h4 id="definition" tabindex="-1">Definition <a class="header-anchor" href="#definition" aria-hidden="true">#</a></h4><p>The <code>StorageUnits</code> enumeration represents all possible numeric storage units. It contains the following values:</p><table><thead><tr><th>Value</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td>0</td><td><code>Byte</code></td><td>The byte unit. (b)</td></tr><tr><td>1</td><td><code>Kilobyte</code></td><td>The kilobyte unit. (kb)</td></tr><tr><td>2</td><td><code>Megabyte</code></td><td>The megabyte unit. (mb)</td></tr><tr><td>3</td><td><code>Gigabyte</code></td><td>The gigabyte unit. (gb)</td></tr><tr><td>4</td><td><code>Terabyte</code></td><td>The terabyte unit. (tb)</td></tr><tr><td>5</td><td><code>Petabyte</code></td><td>The petabyte unit. (pb)</td></tr></tbody></table><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">double</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ToPetabyte</span><span style="color:#89DDFF;">(double</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StorageUnits</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">unit</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">unit </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> StorageUnits</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Terabyte</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000d</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="timeunits" tabindex="-1">TimeUnits <a class="header-anchor" href="#timeunits" aria-hidden="true">#</a></h3><h4 id="definition-1" tabindex="-1">Definition <a class="header-anchor" href="#definition-1" aria-hidden="true">#</a></h4><p>The <code>TimeUnits</code> enumeration represents all possible time units, such as seconds, minutes, etc. A more detailed table on all the values available:</p><table><thead><tr><th>Value</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td>0</td><td><code>Milliseconds</code></td><td>Represents milliseconds.</td></tr><tr><td>1</td><td><code>Seconds</code></td><td>Represents seconds.</td></tr><tr><td>2</td><td><code>Minutes</code></td><td>Represents minutes.</td></tr><tr><td>3</td><td><code>Hours</code></td><td>Represents hours.</td></tr><tr><td>4</td><td><code>Days</code></td><td>Represents days.</td></tr></tbody></table><h4 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">double</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ToSeconds</span><span style="color:#89DDFF;">(double</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TimeUnits</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">unit</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">unit </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> TimeUnits</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Minutes</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="environment" tabindex="-1">Environment <a class="header-anchor" href="#environment" aria-hidden="true">#</a></h2><h3 id="operatingsystems" tabindex="-1">OperatingSystems <a class="header-anchor" href="#operatingsystems" aria-hidden="true">#</a></h3><h4 id="definition-2" tabindex="-1">Definition <a class="header-anchor" href="#definition-2" aria-hidden="true">#</a></h4><p>The <code>OperatingSystems</code> enumerations represents all possible operating systems that a .NET program could run on. It contains several values:</p><table><thead><tr><th>Value</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td>0</td><td><code>Windows</code></td><td>The Microsoft Windows Operating System.</td></tr><tr><td>1</td><td><code>macOS</code></td><td>The Apple macOS Operating System.</td></tr><tr><td>2</td><td><code>Linux</code></td><td>A Linux-based Operating System.</td></tr><tr><td>3</td><td><code>Unknown</code></td><td>An unknown Operating System.</td></tr></tbody></table><h4 id="example-2" tabindex="-1">Example <a class="header-anchor" href="#example-2" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CurrentOs </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> OperatingSystems</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Windows</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">//Do something if the OS is Windows</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="systemthemes" tabindex="-1">SystemThemes <a class="header-anchor" href="#systemthemes" aria-hidden="true">#</a></h3><h4 id="definition-3" tabindex="-1">Definition <a class="header-anchor" href="#definition-3" aria-hidden="true">#</a></h4><p>The <code>SystemThemes</code> enumerations represents all themes available on a Windows device. It contains several values:</p><table><thead><tr><th>Value</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td>0</td><td><code>Dark</code></td><td>The user is using dark theme.</td></tr><tr><td>1</td><td><code>Light</code></td><td>The user is using light theme.</td></tr><tr><td>2</td><td><code>Unknown</code></td><td>The current theme is unknown.</td></tr></tbody></table><h4 id="example-3" tabindex="-1">Example <a class="header-anchor" href="#example-3" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">GetCurrentTheme</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> SystemThemes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Dark</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    Console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteLine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">You have dark theme enabled!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="windowsversion" tabindex="-1">WindowsVersion <a class="header-anchor" href="#windowsversion" aria-hidden="true">#</a></h3><h4 id="definition-4" tabindex="-1">Definition <a class="header-anchor" href="#definition-4" aria-hidden="true">#</a></h4><p>The <code>WindowsVersion</code> enumerations represents all possible Windows versions supported by .NET, which means all version from Windows 7 to 11. It contains several values:</p><table><thead><tr><th>Value</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td>0</td><td><code>Windows7</code></td><td>The Windows 7 (NT 6.1) Operating System.</td></tr><tr><td>1</td><td><code>Windows8</code></td><td>The Windows 8 (NT 6.2) Operating System.</td></tr><tr><td>2</td><td><code>Windows81</code></td><td>The Windows 8.1 (NT 6.3) Operating System.</td></tr><tr><td>3</td><td><code>Windows10</code></td><td>The Windows 10 (NT 10.0) Operating System.</td></tr><tr><td>4</td><td><code>Windows11</code></td><td>The Windows 11 (NT 10.0, Build 22000+) Operating System.</td></tr></tbody></table><h4 id="example-4" tabindex="-1">Example <a class="header-anchor" href="#example-4" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> bool </span><span style="color:#FFCB6B;">DarkThemeAvailable</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> Env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CurrentWindowsVersion </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> WindowsVersion</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Windows10 </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> Env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CurrentWindowsVersion </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> WindowsVersion</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Windows11</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="geometry" tabindex="-1">Geometry <a class="header-anchor" href="#geometry" aria-hidden="true">#</a></h2><h3 id="trianglesides" tabindex="-1">TriangleSides <a class="header-anchor" href="#trianglesides" aria-hidden="true">#</a></h3><h4 id="definition-5" tabindex="-1">Definition <a class="header-anchor" href="#definition-5" aria-hidden="true">#</a></h4><p>The <code>TriangleSides</code> enumeration represents the different sides of a triangle: hypotenuse, adjacent, and opposite. It contains these values:</p><table><thead><tr><th>Value</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td>0</td><td>Opposed</td><td>The opposed side of a specific angle of a triangle.</td></tr><tr><td>1</td><td>Hypotenuse</td><td>The hypotenuse of a triangle.</td></tr><tr><td>2</td><td>Adjacent</td><td>The adjacent side of a specific angle of a triangle.</td></tr></tbody></table><h4 id="example-5" tabindex="-1">Example <a class="header-anchor" href="#example-5" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// Get the adjacent side from the opposed side of a specific angle.</span></span>
<span class="line"><span style="color:#A6ACCD;">Trigonometry</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetAdjacentSideFrom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">TriangleSides</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Opposed</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="internet" tabindex="-1">Internet <a class="header-anchor" href="#internet" aria-hidden="true">#</a></h2><h3 id="statuscodes" tabindex="-1">StatusCodes <a class="header-anchor" href="#statuscodes" aria-hidden="true">#</a></h3><h4 id="definition-6" tabindex="-1">Definition <a class="header-anchor" href="#definition-6" aria-hidden="true">#</a></h4><p>The <code>StatusCodes</code> enumeration represents the different kinds of status codes returned by a server after a request is made to it. The following status codes are available in this enumeration:</p><table><thead><tr><th>Value</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td>0</td><td><code>Informational</code></td><td>Informational responses (100-199)</td></tr><tr><td>1</td><td><code>Success</code></td><td>Successful responses (200-299)</td></tr><tr><td>2</td><td><code>Redirection</code></td><td>Redirection messages (300-399)</td></tr><tr><td>3</td><td><code>ClientError</code></td><td>Client error responses (400-499)</td></tr><tr><td>4</td><td><code>ServerError</code></td><td>Server error responses (500-599)</td></tr></tbody></table><h4 id="example-6" tabindex="-1">Example <a class="header-anchor" href="#example-6" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">status </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetRequestStatus</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">switch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">case</span><span style="color:#A6ACCD;"> StatusCodes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Informational</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        Console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteLine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">An information status code has been returned.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">case</span><span style="color:#A6ACCD;"> StatusCodes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Success</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        Console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteLine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">An successful status code has been returned.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">case</span><span style="color:#A6ACCD;"> StatusCodes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Redirection</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        Console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteLine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">An redirection status code has been returned.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">case</span><span style="color:#A6ACCD;"> StatusCodes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ClientError</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        Console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteLine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">An client error status code has been returned.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">case</span><span style="color:#A6ACCD;"> StatusCodes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ServerError</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        Console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteLine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">An server error status code has been returned.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="password" tabindex="-1">Password <a class="header-anchor" href="#password" aria-hidden="true">#</a></h2><h3 id="passwordpresets" tabindex="-1">PasswordPresets <a class="header-anchor" href="#passwordpresets" aria-hidden="true">#</a></h3><h4 id="definition-7" tabindex="-1">Definition <a class="header-anchor" href="#definition-7" aria-hidden="true">#</a></h4><p>The <code>PasswordPresets</code> enumeration represents all the of the presets available when generating a password using the <code>Password</code> class of <code>PeyrSharp.Core</code>. It has two values:</p><table><thead><tr><th>Value</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td>0</td><td><code>Simple</code></td><td>The Simple preset generates a password with simple characters.</td></tr><tr><td>1</td><td><code>Complex</code></td><td>The Complex preset generates a password with unusual, hard and complex characters.</td></tr></tbody></table><h4 id="example-7" tabindex="-1">Example <a class="header-anchor" href="#example-7" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Main</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">password</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Password</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GenerateAsync</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PasswordPresets</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Simple</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// Generate a simple password</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="passwordstrength" tabindex="-1">PasswordStrength <a class="header-anchor" href="#passwordstrength" aria-hidden="true">#</a></h3><h4 id="definition-8" tabindex="-1">Definition <a class="header-anchor" href="#definition-8" aria-hidden="true">#</a></h4><p>The <code>PasswordStrength</code> enumeration represents different strength levels of a password; if it&#39;s a strong or weak password. It contains these values:</p><table><thead><tr><th>Value</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td>0</td><td><code>Low</code></td><td>The password has a low strength; you shouldn&#39;t use it.</td></tr><tr><td>1</td><td><code>Medium</code></td><td>The password has a medium strength; don&#39;t use it on important websites.</td></tr><tr><td>2</td><td><code>Good</code></td><td>The password has a good strength; you can safely use it.</td></tr><tr><td>3</td><td><code>VeryGood</code></td><td>The password has an excellent strength, meaning it will be hard for hackers to hack it.</td></tr></tbody></table><h4 id="example-8" tabindex="-1">Example <a class="header-anchor" href="#example-8" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">internal</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Main</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Check if the generated password is complex</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Password</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetStrength</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> Password</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GenerateAsync</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PasswordPresets</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Complex</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> PasswordStrength</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Medium</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteLine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The password isn&#39;t complex enough.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="userinterface" tabindex="-1">UserInterface <a class="header-anchor" href="#userinterface" aria-hidden="true">#</a></h2><h3 id="controlalignment" tabindex="-1">ControlAlignment <a class="header-anchor" href="#controlalignment" aria-hidden="true">#</a></h3><h4 id="definition-9" tabindex="-1">Definition <a class="header-anchor" href="#definition-9" aria-hidden="true">#</a></h4><p>The <code>ControlAlignment</code> enumeration is here to help align a control when calling methods from the <code>UiHelpers</code> namespace. It has the following values:</p><table><thead><tr><th>Value</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td>0</td><td><code>Horizontal</code></td><td>The control will be aligned/centered horizontally.</td></tr><tr><td>1</td><td><code>Vertical</code></td><td>The control will be aligned/centered vertically.</td></tr><tr><td>2</td><td><code>Both</code></td><td>The control will be aligned/centered horizontally and vertically.</td></tr></tbody></table><h4 id="example-9" tabindex="-1">Example <a class="header-anchor" href="#example-9" aria-hidden="true">#</a></h4><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> PeyrSharp.UiHelpers</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> App</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">partial</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyForm</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Form</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">button1_Click</span><span style="color:#89DDFF;">(object</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sender</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EventArgs</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">e</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            WinFormsHelpers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CenterControl</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">button1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">this</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ControlAlignment</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Horizontal</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,71),l=[o];function p(r,c,d,i,D,y){return e(),a("div",null,l)}const C=s(t,[["render",p]]);export{F as __pageData,C as default};
