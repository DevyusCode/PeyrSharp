import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.b40c9ff3.js";const w=JSON.parse('{"title":"WindowInfo","description":"","frontmatter":{},"headers":[],"relativePath":"ui-helpers/windowinfo.md","filePath":"ui-helpers/windowinfo.md","lastUpdated":1693471028000}'),e={name:"ui-helpers/windowinfo.md"},l=o(`<h1 id="windowinfo" tabindex="-1">WindowInfo <a class="header-anchor" href="#windowinfo" aria-label="Permalink to &quot;WindowInfo&quot;">​</a></h1><p>This page is about the <code>WindowInfo</code> class available in <a href="./../ui-helpers.html"><code>PeyrSharp.UiHelpers</code></a>. It represents information about a window.</p><h2 id="compatibility" tabindex="-1">Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;Compatibility&quot;">​</a></h2><p>The <code>WindowInfo</code> class is part of the <code>PeyrSharp.UiHelpers</code> module, and is compatible with all of these frameworks and platforms:</p><table><thead><tr><th>Package/Platform</th><th>Windows</th><th>macOS</th><th>Linux + others</th></tr></thead><tbody><tr><td>Env</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><strong>Framework</strong></td><td><strong>.NET 5</strong></td><td><strong>.NET 6</strong></td><td><strong>.NET 7</strong></td></tr><tr><td>Env</td><td>✅</td><td>✅</td><td>✅</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Some methods, classes or features of <code>PeyrSharp.UiHelpers</code> might not be available in all platforms.</p></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="handle" tabindex="-1">Handle <a class="header-anchor" href="#handle" aria-label="Permalink to &quot;Handle&quot;">​</a></h3><h4 id="definition" tabindex="-1">Definition <a class="header-anchor" href="#definition" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> IntPtr Handle { get; set; }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> IntPtr Handle { get; set; }</span></span></code></pre></div><p>Gets or sets the handle of the window.</p><h4 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Create a new WindowInfo object</span></span>
<span class="line"><span style="color:#B392F0;">WindowInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">windowInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> windowInfos[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]; </span><span style="color:#6A737D;">// Assuming you have used the GetWindows() method.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Get the handle of the window</span></span>
<span class="line"><span style="color:#E1E4E8;">Console.</span><span style="color:#B392F0;">WriteLine</span><span style="color:#E1E4E8;">(windowInfo.Handle); </span><span style="color:#6A737D;">// Output: 123456</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Create a new WindowInfo object</span></span>
<span class="line"><span style="color:#6F42C1;">WindowInfo</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">windowInfo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> windowInfos[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]; </span><span style="color:#6A737D;">// Assuming you have used the GetWindows() method.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Get the handle of the window</span></span>
<span class="line"><span style="color:#24292E;">Console.</span><span style="color:#6F42C1;">WriteLine</span><span style="color:#24292E;">(windowInfo.Handle); </span><span style="color:#6A737D;">// Output: 123456</span></span></code></pre></div><h3 id="name" tabindex="-1">Name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;Name&quot;">​</a></h3><h4 id="definition-1" tabindex="-1">Definition <a class="header-anchor" href="#definition-1" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> Name { get; set; }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> Name { get; set; }</span></span></code></pre></div><p>Gets or sets the name of the window.</p><h4 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Create a new WindowInfo object</span></span>
<span class="line"><span style="color:#B392F0;">WindowInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">windowInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WindowInfo</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Set the name of the window</span></span>
<span class="line"><span style="color:#E1E4E8;">windowInfo.Name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;MyWindow&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Get the name of the window</span></span>
<span class="line"><span style="color:#E1E4E8;">Console.</span><span style="color:#B392F0;">WriteLine</span><span style="color:#E1E4E8;">(windowInfo.Name); </span><span style="color:#6A737D;">// Output: MyWindow</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Create a new WindowInfo object</span></span>
<span class="line"><span style="color:#6F42C1;">WindowInfo</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">windowInfo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WindowInfo</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Set the name of the window</span></span>
<span class="line"><span style="color:#24292E;">windowInfo.Name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;MyWindow&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Get the name of the window</span></span>
<span class="line"><span style="color:#24292E;">Console.</span><span style="color:#6F42C1;">WriteLine</span><span style="color:#24292E;">(windowInfo.Name); </span><span style="color:#6A737D;">// Output: MyWindow</span></span></code></pre></div><h3 id="classname" tabindex="-1">ClassName <a class="header-anchor" href="#classname" aria-label="Permalink to &quot;ClassName&quot;">​</a></h3><h4 id="definition-2" tabindex="-1">Definition <a class="header-anchor" href="#definition-2" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> ClassName { get; set; }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> ClassName { get; set; }</span></span></code></pre></div><p>Gets or sets the class name of the window.</p><h4 id="usage-2" tabindex="-1">Usage <a class="header-anchor" href="#usage-2" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Create a new WindowInfo object</span></span>
<span class="line"><span style="color:#B392F0;">WindowInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">windowInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WindowInfo</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Set the class name of the window</span></span>
<span class="line"><span style="color:#E1E4E8;">windowInfo.ClassName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;MyWindowClass&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Get the class name of the window</span></span>
<span class="line"><span style="color:#E1E4E8;">Console.</span><span style="color:#B392F0;">WriteLine</span><span style="color:#E1E4E8;">(windowInfo.ClassName); </span><span style="color:#6A737D;">// Output: MyWindowClass</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Create a new WindowInfo object</span></span>
<span class="line"><span style="color:#6F42C1;">WindowInfo</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">windowInfo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WindowInfo</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Set the class name of the window</span></span>
<span class="line"><span style="color:#24292E;">windowInfo.ClassName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;MyWindowClass&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Get the class name of the window</span></span>
<span class="line"><span style="color:#24292E;">Console.</span><span style="color:#6F42C1;">WriteLine</span><span style="color:#24292E;">(windowInfo.ClassName); </span><span style="color:#6A737D;">// Output: MyWindowClass</span></span></code></pre></div>`,25),p=[l];function t(i,c,r,d,h,y){return a(),n("div",null,p)}const u=s(e,[["render",t]]);export{w as __pageData,u as default};
