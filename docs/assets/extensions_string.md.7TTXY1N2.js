import{_ as s,o as a,c as n,Q as e}from"./chunks/framework._KetfzzT.js";const u=JSON.parse('{"title":"StringExtensions","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/string.md","filePath":"extensions/string.md","lastUpdated":1700306874000}'),o={name:"extensions/string.md"},t=e(`<h1 id="stringextensions" tabindex="-1">StringExtensions <a class="header-anchor" href="#stringextensions" aria-label="Permalink to &quot;StringExtensions&quot;">​</a></h1><p>This page is about the <code>StringExtensions</code> class available in <a href="/extensions.html"><code>PeyrSharp.Extensions</code></a>. You can find here all of its extension methods.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This class is <code>static</code>.</p></div><h2 id="compatibility" tabindex="-1">Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;Compatibility&quot;">​</a></h2><p>The <code>StringExtensions</code> class is part of the <code>PeyrSharp.Extensions</code> module, and is compatible with all of these frameworks and platforms:</p><table><thead><tr><th>Package/Platform</th><th>Windows</th><th>macOS</th><th>Linux + others</th></tr></thead><tbody><tr><td>Extensions</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><strong>Framework</strong></td><td><strong>.NET 6</strong></td><td><strong>.NET 7</strong></td><td><strong>.NET 8</strong></td></tr><tr><td>Extensions</td><td>✅</td><td>✅</td><td>✅</td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="countwords" tabindex="-1">CountWords() <a class="header-anchor" href="#countwords" aria-label="Permalink to &quot;CountWords()&quot;">​</a></h3><h4 id="definition" tabindex="-1">Definition <a class="header-anchor" href="#definition" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Counts the number of words in a <code>string</code>. Returns <code>int</code>.</p><h4 id="arguments" tabindex="-1">Arguments <a class="header-anchor" href="#arguments" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><p>This method has no arguments.</p><h4 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">numberOfWords</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello, this is a test sentence!&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">CountWords</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#6A737D;">// numberOfWords = 6</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">numberOfWords</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello, this is a test sentence!&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">CountWords</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">// numberOfWords = 6</span></span></code></pre></div><h3 id="countwords-wordseparator" tabindex="-1">CountWords(wordSeparator) <a class="header-anchor" href="#countwords-wordseparator" aria-label="Permalink to &quot;CountWords(wordSeparator)&quot;">​</a></h3><h4 id="definition-1" tabindex="-1">Definition <a class="header-anchor" href="#definition-1" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Counts the number of words in a <code>string</code>, with specified word separators. By default, the method uses those (if you don&#39;t pass any argument to it): <code></code>, <code>,</code>, <code>;</code>, <code>.</code>, <code>:</code>, <code>!</code>, <code>?</code>. Returns <code>int</code>.</p><h4 id="arguments-1" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-1" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string[]</code></td><td><code>wordSeparator</code></td><td>The separator of the words.</td></tr></tbody></table><h4 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;">[] </span><span style="color:#B392F0;">wordSeparator</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;:&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;!&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;?&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;.&quot;</span><span style="color:#E1E4E8;"> };</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">numberOfWords</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello, this is a test sentence!&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">CountWords</span><span style="color:#E1E4E8;">(wordSeparator);</span></span>
<span class="line"><span style="color:#6A737D;">// numberOfWords = 6</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;">[] </span><span style="color:#6F42C1;">wordSeparator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;:&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;!&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;?&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.&quot;</span><span style="color:#24292E;"> };</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">numberOfWords</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello, this is a test sentence!&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">CountWords</span><span style="color:#24292E;">(wordSeparator);</span></span>
<span class="line"><span style="color:#6A737D;">// numberOfWords = 6</span></span></code></pre></div><h3 id="endswithsamepunctuation-stringtocheck" tabindex="-1">EndsWithSamePunctuation(stringToCheck) <a class="header-anchor" href="#endswithsamepunctuation-stringtocheck" aria-label="Permalink to &quot;EndsWithSamePunctuation(stringToCheck)&quot;">​</a></h3><h4 id="definition-2" tabindex="-1">Definition <a class="header-anchor" href="#definition-2" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Checks if a <code>string</code> is ending with the same punctuation than an other one. Returns a <code>bool</code>; <code>true</code> if it is the case.</p><h4 id="arguments-2" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-2" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>stringToCheck</code></td><td>The string to compare.</td></tr></tbody></table><h4 id="usage-2" tabindex="-1">Usage <a class="header-anchor" href="#usage-2" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;This is a test sentence.&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">b</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;This is an another test sentence.&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">a.</span><span style="color:#B392F0;">EndsWithSamePunctuation</span><span style="color:#E1E4E8;">(b); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">a</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;This is a test sentence.&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">b</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;This is an another test sentence.&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">a.</span><span style="color:#6F42C1;">EndsWithSamePunctuation</span><span style="color:#24292E;">(b); </span><span style="color:#6A737D;">// true</span></span></code></pre></div><h3 id="endswithsamepunctuation-stringtocheck-punctuationtocheck" tabindex="-1">EndsWithSamePunctuation(stringToCheck, punctuationToCheck) <a class="header-anchor" href="#endswithsamepunctuation-stringtocheck-punctuationtocheck" aria-label="Permalink to &quot;EndsWithSamePunctuation(stringToCheck, punctuationToCheck)&quot;">​</a></h3><h4 id="definition-3" tabindex="-1">Definition <a class="header-anchor" href="#definition-3" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Checks if a <code>string</code> is ending with the same <strong>specified</strong> punctuation than an other one. Returns a <code>bool</code>; <code>true</code> if it is the case.</p><h4 id="arguments-3" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-3" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>stringToCheck</code></td><td>The string to compare.</td></tr><tr><td><code>string</code></td><td><code>punctuationToCheck</code></td><td>The punctuation sign to check for.</td></tr></tbody></table><h4 id="usage-3" tabindex="-1">Usage <a class="header-anchor" href="#usage-3" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;This is a test sentence.&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">b</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;This is an another test sentence.&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">a.</span><span style="color:#B392F0;">EndsWithSamePunctuation</span><span style="color:#E1E4E8;">(b, </span><span style="color:#9ECBFF;">&quot;.&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">a</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;This is a test sentence.&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">b</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;This is an another test sentence.&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">a.</span><span style="color:#6F42C1;">EndsWithSamePunctuation</span><span style="color:#24292E;">(b, </span><span style="color:#032F62;">&quot;.&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span></code></pre></div><h3 id="encryptaes-key" tabindex="-1">EncryptAes(key) <a class="header-anchor" href="#encryptaes-key" aria-label="Permalink to &quot;EncryptAes(key)&quot;">​</a></h3><h4 id="definitions" tabindex="-1">Definitions <a class="header-anchor" href="#definitions" aria-label="Permalink to &quot;Definitions&quot;">​</a></h4><p>Encrypts a <code>string</code> using AES encryption. Returns the encrypted content as a <code>string</code> as well.</p><h4 id="arguments-4" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-4" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>key</code></td><td>The encryption key. This is the same key that will be used to decrypt the text.</td></tr></tbody></table><h4 id="usage-4" tabindex="-1">Usage <a class="header-anchor" href="#usage-4" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">encrypted</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello!&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">EncryptAes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// encrypted = 6NvvTBntd2PdFxXzVbccLw==</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">encrypted</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello!&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">EncryptAes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// encrypted = 6NvvTBntd2PdFxXzVbccLw==</span></span></code></pre></div><h3 id="decryptaes-key" tabindex="-1">DecryptAes(key) <a class="header-anchor" href="#decryptaes-key" aria-label="Permalink to &quot;DecryptAes(key)&quot;">​</a></h3><h4 id="definitions-1" tabindex="-1">Definitions <a class="header-anchor" href="#definitions-1" aria-label="Permalink to &quot;Definitions&quot;">​</a></h4><p>Decrypts a <code>string</code> using AES encryption. Returns the decrypted content as a <code>string</code> as well.</p><h4 id="arguments-5" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-5" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>key</code></td><td>The encryption key that was used during the encryption process.</td></tr></tbody></table><h4 id="usage-5" tabindex="-1">Usage <a class="header-anchor" href="#usage-5" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;6NvvTBntd2PdFxXzVbccLw==&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">DecryptAes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// text = Hello!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">text</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;6NvvTBntd2PdFxXzVbccLw==&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">DecryptAes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// text = Hello!</span></span></code></pre></div><h3 id="hasrepeatedcharacters" tabindex="-1">HasRepeatedCharacters() <a class="header-anchor" href="#hasrepeatedcharacters" aria-label="Permalink to &quot;HasRepeatedCharacters()&quot;">​</a></h3><h4 id="definition-4" tabindex="-1">Definition <a class="header-anchor" href="#definition-4" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Checks if a letter or character is being repeated in a <code>string</code>. Returns <code>bool</code>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Only returns <code>true</code> if a character is repeated more than three times. For instance, &quot;11&quot; will return <code>false</code>, whereas &quot;aaaa&quot; will return <code>true</code>.</p></div><h4 id="arguments-6" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-6" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><p>This methods has no arguments.</p><h4 id="usage-6" tabindex="-1">Usage <a class="header-anchor" href="#usage-6" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;111&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">HasRepeatedCharacters</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;111&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">HasRepeatedCharacters</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// true</span></span></code></pre></div><h3 id="splitlines" tabindex="-1">SplitLines() <a class="header-anchor" href="#splitlines" aria-label="Permalink to &quot;SplitLines()&quot;">​</a></h3><h4 id="definition-5" tabindex="-1">Definition <a class="header-anchor" href="#definition-5" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Splits a <code>string</code> lines to an array. Returns <code>string[]</code>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The method uses the <code>string.Split()</code> method under the hood, which means that it is providing it the following separators: <code>\\n</code>, <code>\\r</code>, <code>\\r\\n</code>.</p></div><h4 id="arguments-7" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-7" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><p>This methods has no arguments.</p><h4 id="usage-7" tabindex="-1">Usage <a class="header-anchor" href="#usage-7" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;">[] </span><span style="color:#B392F0;">lines</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">World&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">SplitLines</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#6A737D;">// lines = { &quot;Hello&quot;, &quot;World&quot; }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;">[] </span><span style="color:#6F42C1;">lines</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">World&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">SplitLines</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">// lines = { &quot;Hello&quot;, &quot;World&quot; }</span></span></code></pre></div><h3 id="toupperat-str-r" tabindex="-1">ToUpperAt(str, r) <a class="header-anchor" href="#toupperat-str-r" aria-label="Permalink to &quot;ToUpperAt(str, r)&quot;">​</a></h3><h4 id="definition-6" tabindex="-1">Definition <a class="header-anchor" href="#definition-6" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Returns a new <code>string</code> in which the characters in a specified range of the current <code>string</code> are converted to uppercase. Returns a <code>string</code> that is equivalent to the current <code>string</code>, but with the characters in the specified range converted to uppercase.</p><h4 id="arguments-8" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-8" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>str</code></td><td>The <code>string</code> to modify.</td></tr><tr><td><code>Range</code></td><td><code>r</code></td><td>The range of characters to convert to uppercase.</td></tr></tbody></table><h4 id="usage-8" tabindex="-1">Usage <a class="header-anchor" href="#usage-8" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;aBcDeFgHiJ&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">upper</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> str.</span><span style="color:#B392F0;">ToUpperAt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">..</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Convert the characters at indexes 2 to 6 (inclusive) to uppercase</span></span>
<span class="line"><span style="color:#6A737D;">// upper = &quot;aBCDEFGhij&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;aBcDeFgHiJ&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">upper</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">ToUpperAt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">..</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Convert the characters at indexes 2 to 6 (inclusive) to uppercase</span></span>
<span class="line"><span style="color:#6A737D;">// upper = &quot;aBCDEFGhij&quot;</span></span></code></pre></div><h3 id="toupperat-s" tabindex="-1">ToUpperAt(s) <a class="header-anchor" href="#toupperat-s" aria-label="Permalink to &quot;ToUpperAt(s)&quot;">​</a></h3><h4 id="definition-7" tabindex="-1">Definition <a class="header-anchor" href="#definition-7" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Uppercases the first letter of a <code>string</code>. Returns a <code>string</code> with the first letter uppercased.</p><h4 id="arguments-9" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-9" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>s</code></td><td>The <code>string</code> to capitalize.</td></tr></tbody></table><h4 id="usage-9" tabindex="-1">Usage <a class="header-anchor" href="#usage-9" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">upper</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> str.</span><span style="color:#B392F0;">ToUpperAt</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Uppercase the first letter of the string</span></span>
<span class="line"><span style="color:#6A737D;">// upper = &quot;Test&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">upper</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">ToUpperAt</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Uppercase the first letter of the string</span></span>
<span class="line"><span style="color:#6A737D;">// upper = &quot;Test&quot;</span></span></code></pre></div><h3 id="tolowerat-s" tabindex="-1">ToLowerAt(s) <a class="header-anchor" href="#tolowerat-s" aria-label="Permalink to &quot;ToLowerAt(s)&quot;">​</a></h3><h4 id="definition-8" tabindex="-1">Definition <a class="header-anchor" href="#definition-8" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Uppercases the first letter of a <code>string</code>. Returns the input <code>string</code> with the first letter lowercased.</p><h4 id="arguments-10" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-10" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>s</code></td><td>The string to lowercase.</td></tr></tbody></table><h4 id="usage-10" tabindex="-1">Usage <a class="header-anchor" href="#usage-10" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">phrase.</span><span style="color:#B392F0;">ToLowerAt</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// &quot;hello world&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">phrase.</span><span style="color:#6F42C1;">ToLowerAt</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// &quot;hello world&quot;</span></span></code></pre></div><h3 id="tolowerat-str-r" tabindex="-1">ToLowerAt(str, r) <a class="header-anchor" href="#tolowerat-str-r" aria-label="Permalink to &quot;ToLowerAt(str, r)&quot;">​</a></h3><h4 id="definition-9" tabindex="-1">Definition <a class="header-anchor" href="#definition-9" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Returns a new <code>string</code> in which the characters in a specified range of the current <code>string</code> are converted to lowercase.</p><h4 id="arguments-11" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-11" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Meaning</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>str</code></td><td>The string to modify.</td></tr><tr><td><code>Range</code></td><td><code>r</code></td><td>The range of characters to convert to lowercase.</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p>A <code>string</code> that is equivalent to the current <code>string</code>, but with the characters in the specified range converted to lowercase.</p><h4 id="usage-11" tabindex="-1">Usage <a class="header-anchor" href="#usage-11" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> text.</span><span style="color:#B392F0;">ToLowerAt</span><span style="color:#E1E4E8;">(range); </span><span style="color:#6A737D;">// &quot;This is a test sentence.&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> text.</span><span style="color:#6F42C1;">ToLowerAt</span><span style="color:#24292E;">(range); </span><span style="color:#6A737D;">// &quot;This is a test sentence.&quot;</span></span></code></pre></div><h3 id="reverse-input" tabindex="-1">Reverse(input) <a class="header-anchor" href="#reverse-input" aria-label="Permalink to &quot;Reverse(input)&quot;">​</a></h3><h4 id="definition-10" tabindex="-1">Definition <a class="header-anchor" href="#definition-10" aria-label="Permalink to &quot;Definition&quot;">​</a></h4><p>Reverses a <code>string</code>.</p><h4 id="arguments-12" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-12" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>input</code></td><td>The string to reverse.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p>A <code>string</code> representing the reversed input.</p><h4 id="usage-12" tabindex="-1">Usage <a class="header-anchor" href="#usage-12" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PeyrSharp</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Extensions</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reversed</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Reverse</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#6A737D;">// Output: &quot;!dlrow ,olleH&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PeyrSharp</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Extensions</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reversed</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello, world!&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Reverse</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">// Output: &quot;!dlrow ,olleH&quot;</span></span></code></pre></div>`,104),l=[t];function p(r,c,i,d,h,y){return a(),n("div",null,l)}const g=s(o,[["render",p]]);export{u as __pageData,g as default};
